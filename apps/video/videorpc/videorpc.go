// Code generated by goctl. DO NOT EDIT.
// Source: video.proto

package videorpc

import (
	"context"

	"mini_tiktok/apps/video/video"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	PublishVideoRequest  = video.PublishVideoRequest
	PublishVideoResponse = video.PublishVideoResponse
	VideoItem            = video.VideoItem
	VideoListRequest     = video.VideoListRequest
	VideoListResponse    = video.VideoListResponse

	VideoRPC interface {
		VideoList(ctx context.Context, in *VideoListRequest, opts ...grpc.CallOption) (*VideoListResponse, error)
		PublishVideo(ctx context.Context, in *PublishVideoRequest, opts ...grpc.CallOption) (*PublishVideoResponse, error)
	}

	defaultVideoRPC struct {
		cli zrpc.Client
	}
)

func NewVideoRPC(cli zrpc.Client) VideoRPC {
	return &defaultVideoRPC{
		cli: cli,
	}
}

func (m *defaultVideoRPC) VideoList(ctx context.Context, in *VideoListRequest, opts ...grpc.CallOption) (*VideoListResponse, error) {
	client := video.NewVideoRPCClient(m.cli.Conn())
	return client.VideoList(ctx, in, opts...)
}

func (m *defaultVideoRPC) PublishVideo(ctx context.Context, in *PublishVideoRequest, opts ...grpc.CallOption) (*PublishVideoResponse, error) {
	client := video.NewVideoRPCClient(m.cli.Conn())
	return client.PublishVideo(ctx, in, opts...)
}
